<%
=begin
apps: redmine
platforms: kubernetes
id: upgrade
title: Upgrading Notes
category: administration
weight: 20
highlight: 20
=end %>

### To 20.0.0

The MariaDB subchart has been updated to the latest version (now it uses 10.6). No major issues are expected during the upgrade.

### To 18.0.0

This major release updates the PostgreSQL subchart to its newest major *11.x.x*, which contain several changes in the supported values (check the [upgrade notes](https://docs.bitnami.com/kubernetes/infrastructure/postgresql/administration/upgrade/) to obtain more information).

#### Upgrading Instructions

To upgrade to *18.0.0* from *17.x* using PostgreSQL as database, it should be done reusing the PVC(s) used to hold the data on your previous release. To do so, follow the instructions below (the following example assumes that the release name is *redmine* and the release namespace *default*):

1. Obtain the credentials and the names of the PVCs used to hold the data on your current release:

        export REDMINE_PASSWORD=$(kubectl get secret --namespace default redmine -o jsonpath="{.data.redmine-password}" | base64 --decode)
        export POSTGRESQL_PASSWORD=$(kubectl get secret --namespace default redmine-postgresql -o jsonpath="{.data.postgresql-password}" | base64 --decode)
        export POSTGRESQL_PVC=$(kubectl get pvc -l app.kubernetes.io/instance=redmine,app.kubernetes.io/name=postgresql,role=primary -o jsonpath="{.items[0].metadata.name}")

2. Delete the PostgreSQL statefulset (notice the option *--cascade=orphan*) and secret:

        kubectl delete statefulsets.apps --cascade=orphan redmine-postgresql
        kubectl delete secret redmine-postgresql --namespace default

3. Upgrade your release using the same PostgreSQL version:

        CURRENT_PG_VERSION=$(kubectl exec redmine-postgresql-0 -- bash -c 'echo $BITNAMI_IMAGE_VERSION')
        helm upgrade redmine bitnami/redmine \
          --set databaseType=postgresql \
          --set redminePassword=$REDMINE_PASSWORD \
          --set postgresql.image.tag=$CURRENT_PG_VERSION \
          --set postgresql.auth.password=$POSTGRESQL_PASSWORD \
          --set postgresql.persistence.existingClaim=$POSTGRESQL_PVC

4. Delete the existing PostgreSQL pods and the new statefulset will create a new one:

        kubectl delete pod redmine-postgresql-0

### 17.0.0

In this version, the `image` block is defined once and is used in the different templates, while in the previous version, the `image` block was duplicated for the main container and the mail receiver one:

~~~
image:
  registry: docker.io
  repository: bitnami/redmine
  tag: 4.2.2
~~~

VS

~~~
image:
  registry: docker.io
  repository: bitnami/redmine
  tag: 4.2.2
---
mailReceiver:
  image:
    registry: docker.io
    repository: bitnami/redmine
    tag: 4.2.2
~~~

See [PR#7114](https://github.com/bitnami/charts/pull/7114) for more info about the implemented changes

### To 16.0.0

The [Bitnami Redmine](https://github.com/bitnami/containers/tree/main/bitnami/redmine) image was refactored and now the source code is published in GitHub in the `rootfs` folder of the container image repository.

#### Upgrading Instructions

To upgrade to *16.0.0* from *15.x*, it should be done enabling the "volumePermissions" init container. To do so, follow the instructions below (the following example assumes that the release name is *redmine* and the release namespace *default*):

1. Obtain the credentials on your current release:

        export REDMINE_PASSWORD=$(kubectl get secret --namespace default redmine -o jsonpath="{.data.redmine-password}" | base64 --decode)
        export MARIADB_ROOT_PASSWORD=$(kubectl get secret --namespace default example-mariadb -o jsonpath="{.data.mariadb-root-password}" | base64 --decode)
        export MARIADB_PASSWORD=$(kubectl get secret --namespace default example-mariadb -o jsonpath="{.data.mariadb-password}" | base64 --decode)

2. Upgrade your release:

        helm upgrade redmine bitnami/redmine \
          --set redminePassword=$REDMINE_PASSWORD \
          --set mariadb.auth.rootPassword=$MARIADB_ROOT_PASSWORD \
          --set mariadb.auth.password=$MARIADB_PASSWORD \
          --set volumePermissions.enabled=true

### To 15.0.0

[On November 13, 2020, Helm v2 support was formally finished](https://github.com/helm/charts#status-of-the-project), this major version is the result of the required changes applied to the Helm Chart to be able to incorporate the different features added in Helm v3 and to be consistent with the Helm project itself regarding the Helm v2 EOL.

#### What changes were introduced in this major version?

* Previous versions of this Helm Chart use `apiVersion: v1` (installable by both Helm 2 and 3), this Helm Chart was updated to `apiVersion: v2` (installable by Helm 3 only). [Here](https://helm.sh/docs/topics/charts/#the-apiversion-field) you can find more information about the `apiVersion` field.
* Move dependency information from the *requirements.yaml* to the *Chart.yaml*
* After running *helm dependency update*, a *Chart.lock* file is generated containing the same structure used in the previous *requirements.lock*
* The different fields present in the *Chart.yaml* file has been ordered alphabetically in a homogeneous way for all the Bitnami Helm Chart.
* Additionally updates the MariaDB & PostgreSQL subcharts to their newest major *9.x.x* and *10.x.x*, respectively, which contain similar changes.

#### Considerations when upgrading to this version

* If you want to upgrade to this version using Helm v2, this scenario is not supported as this version does not support Helm v2 anymore.
* If you installed the previous version with Helm v2 and wants to upgrade to this version with Helm v3, please refer to the [official Helm documentation](https://helm.sh/docs/topics/v2_v3_migration/#migration-use-cases) about migrating from Helm v2 to v3.

#### Useful links

* [Bitnami Tutorial](https://docs.bitnami.com/tutorials/resolve-helm2-helm3-post-migration-issues)
* [Helm docs](https://helm.sh/docs/topics/v2_v3_migration)
* [Helm Blog](https://helm.sh/blog/migrate-from-helm-v2-to-helm-v3)

#### Upgrading Instructions

To upgrade to *15.0.0* from *14.x*, it should be done reusing the credentials on your previous release. To do so, follow the instructions below (the following example assumes that the release name is *redmine* and the release namespace *default*):

1. Obtain the credentials on your current release:

        export REDMINE_PASSWORD=$(kubectl get secret --namespace default redmine -o jsonpath="{.data.redmine-password}" | base64 --decode)
        export MARIADB_ROOT_PASSWORD=$(kubectl get secret --namespace default example-mariadb -o jsonpath="{.data.mariadb-root-password}" | base64 --decode)
        export MARIADB_PASSWORD=$(kubectl get secret --namespace default example-mariadb -o jsonpath="{.data.mariadb-password}" | base64 --decode)

2. Upgrade your release:

        helm upgrade redmine bitnami/redmine \
          --set redminePassword=$REDMINE_PASSWORD \
          --set mariadb.auth.rootPassword=$MARIADB_ROOT_PASSWORD \
          --set mariadb.auth.password=$MARIADB_PASSWORD
